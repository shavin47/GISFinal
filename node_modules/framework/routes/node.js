exports.addNode=function(req, res)
{
	var db = req.db; 
	var collection = db.get("nodecollection");	

	if(req.params.name=="" | req.params.lat=="" | req.params.long == "")
	{
		res.send('Cannot find name or latitude or longitiude');
	}
	else if(-90.0 > parseFloat(req.params.lat) > 90.0 | -180.0 > parseFloat(req.params.long > 180))
	{
		res.send("Invalid latitude and longitiude range");
	}
	else
	{

		collection.insert({

			"name": req.params.name,
			"lat" : req.params.lat,
			"long" : req.params.long,

		}, function(err, doc){
			if(err)
			{
				res.render(err);
			}
			else
			{
				res.render('addnode.jade', {title : 'Node added successfully'});
			}
		});
	}

}

exports.viewAllNodes=function(req, res)
{
	var db = req.db; 
	var collection = db.get('nodecollection');

	collection.find({},{},function(e, docs){

		var theMarkers = new Array(docs.length);
		var theNode; 
		var i=0; 

		for(theNode in docs)
		{
			theMarkers[i] = [docs[i].lat, docs[i].long];
			i++;
		}

		res.render('../views/nodemap.jade', {title: "All the Nodes", "listofnodes": theMarkers});
	})

}

exports.viewNamedNodes=function(req, res)
{
	var db = req.db; 
	var collection = db.get('nodecollection');

	var nodename = req.params.name;

	console.log(nodename);

	collection.find({name: nodename}, {}, function(e, docs){

		var theMarkers = new Array(docs.length);
		var theNode;
		var i=0; 

		for(theNode in docs)
		{
			theMarkers[i] = [docs[i].lat, docs[i].long];			
			i++;
		}

		res.render('../views/nodemap.jade', {title: nodename, "listofnodes": theMarkers})
	})
}

exports.removeNode = function(req, res)
{
	var db = req.db; 
	var collection = db.get('nodecollection');

	var Lat = req.params.lat;
	var Long = req.params.long;

	collection.remove({lat: Lat, long: Long}, function(err, removed){

		res.render('removenode.jade', {title: 'Node successfully removed'});

	})

}